// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// CTRL
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/COH)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x010 : Data signal of frame_size
//         bit 31~0 - frame_size[31:0] (Read/Write)
// 0x014 : reserved
// 0x200 : Data signal of status
//         bit 31~0 - status[31:0] (Read)
// 0x204 : Control signal of status
//         bit 0  - status_ap_vld (Read/COR)
//         others - reserved
// 0x100 ~
// 0x1ff : Memory 'frame' (64 * 32b)
//         Word n : bit [31:0] - frame[n]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XGPU2RTDS_CTRL_ADDR_AP_CTRL         0x000
#define XGPU2RTDS_CTRL_ADDR_GIE             0x004
#define XGPU2RTDS_CTRL_ADDR_IER             0x008
#define XGPU2RTDS_CTRL_ADDR_ISR             0x00c
#define XGPU2RTDS_CTRL_ADDR_FRAME_SIZE_DATA 0x010
#define XGPU2RTDS_CTRL_BITS_FRAME_SIZE_DATA 32
#define XGPU2RTDS_CTRL_ADDR_STATUS_DATA     0x200
#define XGPU2RTDS_CTRL_BITS_STATUS_DATA     32
#define XGPU2RTDS_CTRL_ADDR_STATUS_CTRL     0x204
#define XGPU2RTDS_CTRL_ADDR_FRAME_BASE      0x100
#define XGPU2RTDS_CTRL_ADDR_FRAME_HIGH      0x1ff
#define XGPU2RTDS_CTRL_WIDTH_FRAME          32
#define XGPU2RTDS_CTRL_DEPTH_FRAME          64

